---
import { formatDate, pickColorByHash, pickColorGradientByHash } from "@/util";
import BaseLayout from "./BaseLayout.astro";
import type { CollectionEntry } from "astro:content";
import { Icon } from "astro-icon/components";

export interface Props {
  frontmatter: CollectionEntry<"posts">["data"];
}

const {
  frontmatter: {
    title,
    excerpt,
    publishDate,
    quickLinks,
    tags,
  },
} = Astro.props;

const permalink = '';
const heroImage = '';
const alt = '';
---

<BaseLayout title={title} description={excerpt} permalink={permalink}>
  <article
    class="prose prose-lg dark:prose-invert max-md:mx-8 mx-auto my-32 max-w-prose"
  >
    <a href="/blog" class="inline-flex items-center gap-2 text-sm opacity-70 hover:opacity-100 transition-opacity mb-8 no-underline">
      <Icon name="tabler:arrow-left" size="1rem" />
      Back to blog
    </a>
    <header class="text-left">
      {
        heroImage && (
          <img
            width="720"
            height="420"
            class="hero-image"
            loading="lazy"
            src={heroImage}
            alt={alt}
          />
        )
      }
      <h1 class="title">{title}</h1>
      <p>
        <a href="https://pavi2410.com">Pavitra Golchha</a> â€¢ Published on&nbsp;
        {formatDate(publishDate)}
      </p>
      <p>
        <div class="uppercase text-sm font-semibold opacity-50 pb-1">
          Tags
        </div>
        <div class="flex flex-wrap gap-1 not-prose">
          {
            tags.map((tag) => (
              <a
                href={`/blog/tag/${encodeURIComponent(tag)}`}
                class="rounded text-sm px-2.5 py-0.5"
                style={pickColorByHash(tag)}
              >
                {tag}
              </a>
            ))
          }
        </div>
      </p>
      {
        quickLinks && (
          <p>
            <div class="uppercase text-sm font-semibold opacity-50 pb-1">
              Quick Links
            </div>
            <div class="flex gap-4 not-prose overflow-x-scroll mask-r-from-95%">
              {quickLinks.map(({ title, link }) => (
                <a
                  href={link}
                  target="_blank"
                  class={`relative border rounded-xl py-2 px-4 h-32 aspect-video ${pickColorGradientByHash(title)}`}
                >
                  {title}
                  <Icon
                    name="tabler:external-link"
                    size="2rem"
                    class="absolute bottom-4 right-4"
                  />
                </a>
              ))}
            </div>
          </p>
        )
      }
    </header>
    <main>
      <slot />
    </main>
  </article>
</BaseLayout>
